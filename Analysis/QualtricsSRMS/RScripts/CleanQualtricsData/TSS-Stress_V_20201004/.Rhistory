# data.Independent<- data.raw%>%
#   filter(PLATFORM=="INDEPENDENT")%>%
#   select(INDEPENDENT_PID)%>%
#   distinct(INDEPENDENT_PID)%>%
#     rename(SubID=INDEPENDENT_PID)
data.SubjectListCombined<- data.prolific.filter
#data.SubjectListCombined<- join(data.prolific.filter, data.SonaPay.filter,type= "full")
#data.SubjectListCombined<- join(data.SubjectListCombined,data.Independent,type= "full")
data.filter<- data.raw %>%
dplyr::filter(AssignmentID==curVersion)#%>%
# dplyr::filter(PROLIFIC_PID %in%data.Error$PROLIFIC_PID)
data.filter<- data.filter %>%
# dplyr::filter(workerId %in%data.prolific.filter$participant_id |SubID %in%data.Sona.filter$survey_id )
dplyr::filter(workerId %in%data.SubjectListCombined$SubID )
View(data.filter)
data.filter<- data.filter %>%
# dplyr::filter(workerId %in%data.prolific.filter$participant_id |SubID %in%data.Sona.filter$survey_id )
dplyr::filter(WorkerId %in%data.SubjectListCombined$SubID )
View(data.filter)
data.filter<- data.filter %>%
# dplyr::filter(workerId %in%data.prolific.filter$participant_id |SubID %in%data.Sona.filter$survey_id )
dplyr::filter(WorkerID %in%data.SubjectListCombined$SubID )
data.Embedded=data.filter %>%
dplyr::select(WorkerID,PLATFORM,bP,order)
View(data.Embedded)
# recode data
data.LowDiffCue=data.filter %>%
dplyr::select(WorkerID,PLATFORM,starts_with("Composite_Collector_PosLPenL"))%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-5  unpleasant/negative" ,-5)%>%
replace(.=="-5  relaxed/calm" ,-5)%>%
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
replace(.=="5 pleasant/positive"  ,5)%>%
replace(.=="5  stimulated/aroused",5)%>%
dplyr::mutate_at(vars(starts_with("PosHigh_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.LowDiffCue<-data.LowDiffCue %>%
rename(PosHigh_Like= Composite_Collector_PosLPenL_7, #7
PosHigh_Pleasant= Composite_Collector_PosLPenL_1, #1
PosHigh_Arousal= Composite_Collector_PosLPenL_2, #2
PosHigh_Motivation= Composite_Collector_PosLPenL_3, #3
PosHigh_Difficult= Composite_Collector_PosLPenL_4, #4
PosHigh_Effort= Composite_Collector_PosLPenL_5, #5
PosHigh_Attention= Composite_Collector_PosLPenL_6) #6
View(data.LowDiffCue)
# recode data
data.LowDiffCue=data.filter %>%
dplyr::select(WorkerID,PLATFORM,starts_with("Composite_Collector_PosLPenL"))%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-5  unpleasant/negative" ,-5)%>%
replace(.=="-5  relaxed/calm" ,-5)%>%
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
replace(.=="5 pleasant/positive"  ,5)%>%
replace(.=="5  stimulated/aroused",5)%>%
dplyr::mutate_at(vars(starts_with("LowDiffCue_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.LowDiffCue<-data.LowDiffCue %>%
rename(PosHigh_Like= Composite_Collector_PosLPenL_7, #7
PosHigh_Pleasant= Composite_Collector_PosLPenL_1, #1
PosHigh_Arousal= Composite_Collector_PosLPenL_2, #2
PosHigh_Motivation= Composite_Collector_PosLPenL_3, #3
PosHigh_Difficult= Composite_Collector_PosLPenL_4, #4
PosHigh_Effort= Composite_Collector_PosLPenL_5, #5
PosHigh_Attention= Composite_Collector_PosLPenL_6) #6
View(data.LowDiffCue)
# recode data
data.LowDiffCue=data.filter %>%
dplyr::select(WorkerID,PLATFORM,starts_with("Composite_Collector_PosLPenL"))%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-5  unpleasant/negative" ,-5)%>%
replace(.=="-5  relaxed/calm" ,-5)%>%
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
replace(.=="5 pleasant/positive"  ,5)%>%
replace(.=="5  stimulated/aroused",5)%>%
dplyr::mutate_at(vars(starts_with("LowDiffCue_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.LowDiffCue<-data.LowDiffCue %>%
rename(PosHigh_Like= Composite_Collector_PosLPenL_7, #7
PosHigh_Pleasant= Composite_Collector_PosLPenL_1, #1
PosHigh_Arousal= Composite_Collector_PosLPenL_2, #2
PosHigh_Motivation= Composite_Collector_PosLPenL_3, #3
PosHigh_Difficult= Composite_Collector_PosLPenL_4, #4
PosHigh_Effort= Composite_Collector_PosLPenL_5, #5
PosHigh_Attention= Composite_Collector_PosLPenL_6) #6
# recode data
data.LowDiffCue=data.filter %>%
dplyr::select(WorkerID,PLATFORM,starts_with("Composite_Collector_PosLPenL"))%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-5  unpleasant/negative" ,-5)%>%
replace(.=="-5  relaxed/calm" ,-5)%>%
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
replace(.=="5 pleasant/positive"  ,5)%>%
replace(.=="5  stimulated/aroused",5)%>%
dplyr::mutate_at(vars(starts_with("Composite_Collector_PosLPenL_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.LowDiffCue<-data.LowDiffCue %>%
rename(LowDiffCue_Like= Composite_Collector_PosLPenL_7, #7
LowDiffCue_Pleasant= Composite_Collector_PosLPenL_1, #1
LowDiffCue_Arousal= Composite_Collector_PosLPenL_2, #2
LowDiffCue_Motivation= Composite_Collector_PosLPenL_3, #3
LowDiffCue_Difficult= Composite_Collector_PosLPenL_4, #4
LowDiffCue_Effort= Composite_Collector_PosLPenL_5, #5
LowDiffCue_Attention= Composite_Collector_PosLPenL_6) #6
View(data.LowDiffCue)
# recode data
data.HighDiffCue=data.filter %>%
dplyr::select(WorkerID,PLATFORM,starts_with("Composite_Collector_PosLPenH_"))%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-5  unpleasant/negative" ,-5)%>%
replace(.=="-5  relaxed/calm" ,-5)%>%
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
replace(.=="5 pleasant/positive"  ,5)%>%
replace(.=="5  stimulated/aroused",5)%>%
dplyr::mutate_at(vars(starts_with("Composite_Collector_PosLPenH_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.HighDiffCue<-data.HighDiffCue %>%
rename(HighDiffCue_Like= Composite_Collector_PosLPenH_7, #7
HighDiffCue_Pleasant= Composite_Collector_PosLPenH_1, #1
HighDiffCue_Arousal= Composite_Collector_PosLPenH_2, #2
HighDiffCue_Motivation= Composite_Collector_PosLPenH_3, #3
HighDiffCue_Difficult= Composite_Collector_PosLPenH_4, #4
HighDiffCue_Effort= Composite_Collector_PosLPenH_5, #5
HighDiffCue_Attention= Composite_Collector_PosLPenH_6) #6
View(data.HighDiffCue)
# recode data
data.EasyReachedFB=data.filter %>%
dplyr::select(WorkerID,PLATFORM,starts_with("Q261_15_"))%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
dplyr::mutate_at(vars(starts_with("Q261_15_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.EasyReachedFB <-data.EasyReachedFB %>%
rename(EasyReachedFB_Like=Q261_15_4,
EasyReachedFB_Motivation= Q261_15_1,
EasyReachedFB_Difficult= Q261_15_2,
EasyReachedFB_Attention= Q261_15_3)
View(data.EasyReachedFB)
# recode data
data.EasyFailedFB=data.filter %>%
dplyr::select(WorkerID,PLATFORM,starts_with("Q261_14_"))%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
dplyr::mutate_at(vars(starts_with("Q261_14_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.EasyFailedFBB <-data.EasyFailedFB %>%
rename(EasyFailedFB_Like=Q261_14_4,
EasyFailedFB_Motivation= Q261_14_1,
EasyFailedFB_Difficult= Q261_14_2,
EasyFailedFB_Attention= Q261_14_3)
# recode data
data.EasyFailedFB=data.filter %>%
dplyr::select(WorkerID,PLATFORM,starts_with("Q261_14_"))%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
dplyr::mutate_at(vars(starts_with("Q261_14_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.EasyFailedFB <-data.EasyFailedFB %>%
rename(EasyFailedFB_Like=Q261_14_4,
EasyFailedFB_Motivation= Q261_14_1,
EasyFailedFB_Difficult= Q261_14_2,
EasyFailedFB_Attention= Q261_14_3)
# recode data
data.EasyFailedFB=data.filter %>%
dplyr::select(WorkerID,PLATFORM,starts_with("Q261_14_"))%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
dplyr::mutate_at(vars(starts_with("Q261_14_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.EasyFailedFB <-data.EasyFailedFB %>%
rename(EasyFailedFB_Like=Q261_14_4,
EasyFailedFB_Motivation= Q261_14_1,
EasyFailedFB_Difficult= Q261_14_2,
EasyFailedFB_Attention= Q261_14_3)
View(data.EasyFailedFB)
# recode data
data.EasyReachedFB=data.filter %>%
dplyr::select(WorkerID,PLATFORM,Q261_15_1,Q261_15_2,Q261_15_3,Q261_15_4))%>% # select the variables you would like to work with (Always ID)
# recode data
data.EasyReachedFB=data.filter %>%
dplyr::select(WorkerID,PLATFORM,Q261_15_1,Q261_15_2,Q261_15_3,Q261_15_4)%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
dplyr::mutate_at(vars(starts_with("Q261_15_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.EasyReachedFB <-data.EasyReachedFB %>%
rename(EasyReachedFB_Like=Q261_15_4,
EasyReachedFB_Motivation= Q261_15_1,
EasyReachedFB_Difficult= Q261_15_2,
EasyReachedFB_Attention= Q261_15_3)
# recode data
data.EasyFailedFB=data.filter %>%
dplyr::select(WorkerID,PLATFORM,Q261_14_1,Q261_14_2,Q261_14_3,Q261_14_4)%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
dplyr::mutate_at(vars(starts_with("Q261_14_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.EasyFailedFB <-data.EasyFailedFB %>%
rename(EasyFailedFB_Like=Q261_14_4,
EasyFailedFB_Motivation= Q261_14_1,
EasyFailedFB_Difficult= Q261_14_2,
EasyFailedFB_Attention= Q261_14_3)
# recode data
data.HardReachedFB=data.filter %>%
dplyr::select(WorkerID,PLATFORM,Q261_15_1.1,Q261_15_2.1,Q261_15_3.1,Q261_15_4.1)%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
dplyr::mutate_at(vars(starts_with("Q261_15_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.HardReachedFB <-data.HardReachedFB %>%
rename(HardReachedFB_Like=Q261_15_4.1,
HardReachedFB_Motivation= Q261_15_1.1,
HardReachedFB_Difficult= Q261_15_2.1,
HardReachedFB_Attention= Q261_15_3.1)
# recode data
data.HardFailedFB=data.filter %>%
dplyr::select(WorkerID,PLATFORM,Q261_14_1.1,Q261_14_2.1,Q261_14_3.1,Q261_14_4.1)%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
dplyr::mutate_at(vars(starts_with("Q261_14_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.HardFailedFB <-data.HardFailedFB %>%
rename(HardFailedFB_Like=Q261_14_4.1,
HardFailedFB_Motivation= Q261_14_1.1,
HardFailedFB_Difficult= Q261_14_2.1,
HardFailedFB_Attention= Q261_14_3.1)
View(data.HardReachedFB)
View(data.Embedded)
#merge all of the cleaned data files
data.cleanDebrief <-data.Embedded %>%
join(data.EasyCue,by=c("WorkerID","PLATFORM") ) %>%
join(data.HardCue,by=c("WorkerID","PLATFORM") ) %>%
join(data.EasyReachedFB,by=c("WorkerID","PLATFORM") ) %>%
join(data.EasyFailedFB,by=c("WorkerID","PLATFORM") ) %>%
join(data.HardReachedFB,by=c("WorkerID","PLATFORM") ) %>%
join(data.HardFailedFB,by=c("WorkerID","PLATFORM") )
# recode data
data.EasyCue=data.filter %>%
dplyr::select(WorkerID,PLATFORM,starts_with("Composite_Collector_PosLPenL"))%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-5  unpleasant/negative" ,-5)%>%
replace(.=="-5  relaxed/calm" ,-5)%>%
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
replace(.=="5 pleasant/positive"  ,5)%>%
replace(.=="5  stimulated/aroused",5)%>%
dplyr::mutate_at(vars(starts_with("Composite_Collector_PosLPenL_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.EasyCue<-data.EasyCue %>%
rename(Easy_Like= Composite_Collector_PosLPenL_7, #7
Easy_Pleasant= Composite_Collector_PosLPenL_1, #1
Easy_Arousal= Composite_Collector_PosLPenL_2, #2
Easy_Motivation= Composite_Collector_PosLPenL_3, #3
Easy_Difficult= Composite_Collector_PosLPenL_4, #4
Easy_Effort= Composite_Collector_PosLPenL_5, #5
Easy_Attention= Composite_Collector_PosLPenL_6) #6
# recode data
data.HardCue=data.filter %>%
dplyr::select(WorkerID,PLATFORM,starts_with("Composite_Collector_PosLPenH_"))%>% # select the variables you would like to work with (Always ID)
dplyr::mutate_all(as.character)%>% # turn into the data type into character
replace(.=="-5  Not at all" ,-5)%>% #replace and recode
replace(.=="-5  unpleasant/negative" ,-5)%>%
replace(.=="-5  relaxed/calm" ,-5)%>%
replace(.=="-4",-4)%>%
replace(.=="-3",-3)%>%
replace(.=="-2",-2)%>%
replace(.=="-1",-1)%>%
replace(.=="0  Neutral",0)%>%
replace(.=="1",1)%>%
replace(.=="2",2)%>%
replace(.=="3",3)%>%
replace(.=="4",4)%>%
replace(.=="5  A lot" ,5)%>%
replace(.=="5 pleasant/positive"  ,5)%>%
replace(.=="5  stimulated/aroused",5)%>%
dplyr::mutate_at(vars(starts_with("Composite_Collector_PosLPenH_")),as.numeric)%>% # turn into the data type into numeric
replace(.=="Prefer not to respond",NA)
# rename variables to informative name
data.HardCue<-data.HardCue %>%
rename(Hard_Like= Composite_Collector_PosLPenH_7, #7
Hard_Pleasant= Composite_Collector_PosLPenH_1, #1
Hard_Arousal= Composite_Collector_PosLPenH_2, #2
Hard_Motivation= Composite_Collector_PosLPenH_3, #3
Hard_Difficult= Composite_Collector_PosLPenH_4, #4
Hard_Effort= Composite_Collector_PosLPenH_5, #5
Hard_Attention= Composite_Collector_PosLPenH_6) #6
#merge all of the cleaned data files
data.cleanDebrief <-data.Embedded %>%
join(data.EasyCue,by=c("WorkerID","PLATFORM") ) %>%
join(data.HardCue,by=c("WorkerID","PLATFORM") ) %>%
join(data.EasyReachedFB,by=c("WorkerID","PLATFORM") ) %>%
join(data.EasyFailedFB,by=c("WorkerID","PLATFORM") ) %>%
join(data.HardReachedFB,by=c("WorkerID","PLATFORM") ) %>%
join(data.HardFailedFB,by=c("WorkerID","PLATFORM") )
write.csv(data.cleanDebrief,path.clean.data, row.names = FALSE)
install.packages(c("dplyr", "knitr", "pacman"))
knitr::opts_chunk$set(echo = TRUE)
#Clear environemnt and Load Packages
# clear the environment
rm(list=ls())
#detach("package:here", unload = TRUE)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
plyr,  # For join function
tidyverse, #for dyplr functions
)
knitr::opts_chunk$set(echo = TRUE)
# Set Working Directory and Paths
curDir=getwd()
## set directory
setwd(curDir)
curDate=Sys.Date()
# import data
#CHANGE ONLY INFORMATION BELOW#
##------------##
#set version to current study version
curVersion="TSS-Stress_20201004"
#Change path to the raw data: change the file name after Clean/
path.raw.data= "../../../../../Data/QualtricsSRMS/TSS-Stress_20201004/CleanedData/TSS-Stress_Debrief_Clean_Version_TSS-Stress_20201004_Date_2020-11-15.csv"
##------------##
path.clean.data = paste("../../../../Data/Qualtrics/Clean/", curDate,"_SPICE_SRMS_Clean_MissingData_Version_",curVersion,".csv", sep = "")
path.NA.data = paste("../../../../Data/Qualtrics/Clean/", curDate,"_SPICE_SRMS_Clean_MissingDataSummary_Version_",curVersion,".csv", sep = "")
#import raw data
data.raw = read.csv(file = path.raw.data,header=TRUE,na.strings="NA")
data.Embedded=data.raw %>%
dplyr::select(workerId,PLATFORM, bG,bP,Group,order)
View(data.raw)
data.Embedded=data.raw %>%
dplyr::select(WorkerID,PLATFORM, bG,bP,order)
data.Embedded=data.raw %>%
dplyr::select(WorkerID,PLATFORM,bP,order)
# create data frame and add count of Na's per row (each row is a participant)
data.Easy <-data.raw %>%
dplyr::select(WorkerID,starts_with("Easy_")) %>%
dplyr::mutate(Easy_NA_Count=rowSums(is.na(.)))
# create data frame and add count of Na's per row (each row is a participant)
data.Hard <-data.raw %>%
dplyr::select(WorkerID,starts_with("Hard_")) %>%
dplyr::mutate(Easy_NA_Count=rowSums(is.na(.)))
# create data frame and add count of Na's per row (each row is a participant)
data.EasyReachedFB=data.raw %>%
dplyr::select(workerId,starts_with("EasyReachedFB_"))%>%
dplyr::mutate(EasyReachedFB_NA_Count=rowSums(is.na(.)))
# create data frame and add count of Na's per row (each row is a participant)
data.EasyReachedFB=data.raw %>%
dplyr::select(WorkerID,starts_with("EasyReachedFB_"))%>%
dplyr::mutate(EasyReachedFB_NA_Count=rowSums(is.na(.)))
View(data.EasyReachedFB)
# create data frame and add count of Na's per row (each row is a participant)
data.HardReachedFB=data.raw %>%
dplyr::select(WorkerID,starts_with("HardReachedFB_"))%>%
dplyr::mutate(HardReachedFB_NA_Count=rowSums(is.na(.)))
# create data frame and add count of Na's per row (each row is a participant)
data.EasyFailedFB=data.raw %>%
dplyr::select(WorkerID,starts_with("EasyFailedFB_"))%>%
dplyr::mutate(EasyFailedFB_NA_Count=rowSums(is.na(.)))
# create data frame and add count of Na's per row (each row is a participant)
data.HardFailedFB=data.raw %>%
dplyr::select(WorkerID,starts_with("HardFailedFB_"))%>%
dplyr::mutate(HardFailedFB_NA_Count=rowSums(is.na(.)))
